name: OpenWrt-CI

on:
  repository_dispatch:
  release:
    types: published
#  push:
#    branches:
#      - main
#    paths:
#      - 'all.config'
  schedule:
    - cron: 0 22 */2 * * 
  watch:
    types: started
jobs:

  build_openwrt:

    name: OpenWrt_Build 

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
          sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf wget swig rsync
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "Asia/Shanghai"
      - name: Update feeds
        env:
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          #sed -i 's/coolsnowwolf/sirpdboy/g' ./feeds.conf.default
          git clone https://github.com/sirpdboy/sirpdboy-package package/diy
          ./scripts/feeds update -a
      - name: Update package
        working-directory: ./openwrt
        run: | 
          #cd openwrt
          curl -fsSL https://raw.githubusercontent.com/loso3000/other/master/patch/script/uppackage.sh | sh
          ./scripts/feeds install -a
          chmod -R 755 .
      - name: Generate configuration file
        working-directory: ./openwrt
        run: |
          #cd openwrt
          curl -fsSL https://raw.githubusercontent.com/loso3000/other/master/patch/x86-64/appdrv.config > .config
          make defconfig
      - name: Make download
        working-directory: ./openwrt
        run: |
          make download -j8

          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        working-directory: ./openwrt
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare Artifact
        run: |
          mkdir -p ./new/firmware
          mkdir -p ./new/package
          cp -rf $(find ./openwrt/bin/ -type f -name "*.ipk") ./new/package
          find ./openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./new/firmware
          cd ./new/firmware
          gzip *.*
      - name: Upload Firmware
        uses: actions/upload-artifact@main
        with:
          name: SirpdboyOpenWrt-IPV4P-Firmware
          path: ./new/firmware
      - name: Upload  IPK
        uses: actions/upload-artifact@main
        with:
          name: SirpdboyOpenWrt-IPV4P-Ipk
          path: ./new/package
      - name: Upload firmware to cowtransfer
        run: |
         curl -fsSL git.io/file-transfer | sh
         ./transfer cow --block 2621440 -s -p 64 --no-progress ./new/firmware 2>&1 | tee cowtransfer.log
         echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
      - name: Upload Firmware wetransfer
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ./new/firmware 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
          echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
          
